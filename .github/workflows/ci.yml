name: CI

on:
  pull_request:
  push:
    branches: [main]

env:
  PYTHON_VERSION: "3.12"
  DEPLOY_TOOL: ${{ vars.DEPLOY_TOOL || 'sam' }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black pytest
      - name: Lint
        run: |
          ruff check .
          black --check .
      - name: Test
        run: |
          pytest -q

  security:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit
      - name: Bandit Scan
        run: bandit -r .

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint-test, security]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Set up Terraform
        if: env.DEPLOY_TOOL == 'terraform'
        uses: hashicorp/setup-terraform@v2
      - name: Install SAM CLI
        if: env.DEPLOY_TOOL == 'sam'
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli
      - name: Build
        run: |
          if [ "$DEPLOY_TOOL" = "terraform" ]; then
            terraform init -input=false
          else
            sam build
          fi
      - name: Deploy
        env:
          SAM_STACK_NAME: ${{ secrets.SAM_STACK_NAME }}
        run: |
          if [ "$DEPLOY_TOOL" = "terraform" ]; then
            terraform apply -auto-approve
          else
            sam deploy --stack-name "$SAM_STACK_NAME" --no-confirm-changeset --no-fail-on-empty-changeset
          fi
      - name: Notify Slack
        if: always() && env.SLACK_WEBHOOK_URL != ''
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
